{"version":3,"names":["processColor","makeShareable","_updatePropsJS","shouldBeUseWeb","runOnUIImmediately","colorProps","ColorProperties","updateProps","_","updates","maybeViewRef","items","forEach","item","viewDescriptors","key","indexOf","global","UpdatePropsManager","update","updatePropsJestWrapper","animatedStyle","adapters","adapter","current","value","createUpdatePropsManager","_IS_FABRIC","operations","viewDescriptor","push","shadowNodeWrapper","length","queueMicrotask","flush","_updatePropsFabric","tag","name","_updatePropsPaper"],"sources":["UpdateProps.ts"],"sourcesContent":["import type { MutableRefObject } from 'react';\nimport { processColor } from './Colors';\nimport type { ShadowNodeWrapper, SharedValue, StyleProps } from './commonTypes';\nimport type { AnimatedStyle } from './helperTypes';\nimport { makeShareable } from './core';\nimport type { Descriptor } from './hook/commonTypes';\nimport { _updatePropsJS } from './js-reanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport type { ViewRefSet } from './ViewDescriptorsSet';\nimport { runOnUIImmediately } from './threads';\n\n// copied from react-native/Libraries/Components/View/ReactNativeStyleAttributes\nconst colorProps = [\n  'backgroundColor',\n  'borderBottomColor',\n  'borderColor',\n  'borderLeftColor',\n  'borderRightColor',\n  'borderTopColor',\n  'borderStartColor',\n  'borderEndColor',\n  'color',\n  'shadowColor',\n  'textDecorationColor',\n  'tintColor',\n  'textShadowColor',\n  'overlayColor',\n];\n\nexport const ColorProperties = makeShareable(colorProps);\n\nlet updateProps: (\n  viewDescriptor: SharedValue<Descriptor[]>,\n  updates: StyleProps | AnimatedStyle<any>,\n  maybeViewRef: ViewRefSet<any> | undefined\n) => void;\n\nif (shouldBeUseWeb()) {\n  updateProps = (_, updates, maybeViewRef) => {\n    'worklet';\n    if (maybeViewRef) {\n      maybeViewRef.items.forEach((item, _) => {\n        _updatePropsJS(updates, item);\n      });\n    }\n  };\n} else {\n  updateProps = (viewDescriptors, updates) => {\n    'worklet';\n    for (const key in updates) {\n      if (ColorProperties.indexOf(key) !== -1) {\n        updates[key] = processColor(updates[key]);\n      }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    global.UpdatePropsManager!.update(viewDescriptors, updates);\n  };\n}\n\nexport const updatePropsJestWrapper = (\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updates: AnimatedStyle<any>,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animatedStyle: MutableRefObject<AnimatedStyle<any>>,\n  adapters: ((updates: AnimatedStyle<any>) => void)[]\n): void => {\n  adapters.forEach((adapter) => {\n    adapter(updates);\n  });\n  animatedStyle.current.value = {\n    ...animatedStyle.current.value,\n    ...updates,\n  };\n\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\n\nexport default updateProps;\n\nconst createUpdatePropsManager = global._IS_FABRIC\n  ? () => {\n      'worklet';\n      // Fabric\n      const operations: {\n        shadowNodeWrapper: ShadowNodeWrapper;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: SharedValue<Descriptor[]>,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              shadowNodeWrapper: viewDescriptor.shadowNodeWrapper,\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush() {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          _updatePropsFabric!(operations);\n          operations.length = 0;\n        },\n      };\n    }\n  : () => {\n      'worklet';\n      // Paper\n      const operations: {\n        tag: number;\n        name: string;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: SharedValue<Descriptor[]>,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              tag: viewDescriptor.tag,\n              name: viewDescriptor.name || 'RCTView',\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush() {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          _updatePropsPaper!(operations);\n          operations.length = 0;\n        },\n      };\n    };\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.UpdatePropsManager = createUpdatePropsManager();\n})();\n\nexport interface UpdatePropsManager {\n  update(\n    viewDescriptors: SharedValue<Descriptor[]>,\n    updates: StyleProps | AnimatedStyle<any>\n  ): void;\n  flush(): void;\n}\n"],"mappings":"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"}