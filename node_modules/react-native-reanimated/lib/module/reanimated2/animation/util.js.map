{"version":3,"names":["isColor","convertToRGBA","rgbaArrayToRGBAColor","toGammaSpace","toLinearSpace","NativeReanimatedModule","flatten","multiplyMatrices","scaleMatrix","addMatrices","decomposeMatrixIntoMatricesAndAngles","isAffineMatrixFlat","subtractMatrices","getRotationMatrix","IN_STYLE_UPDATER","initialUpdaterRun","updater","result","recognizePrefixSuffix","value","match","Error","prefix","suffix","number","strippedValue","parseFloat","applyProgressToMatrix","progress","a","b","applyProgressToNumber","decorateAnimation","animation","isHigherOrder","baseOnStart","onStart","baseOnFrame","onFrame","animationCopy","Object","assign","callback","prefNumberSuffOnStart","timestamp","previousAnimation","__prefix","__suffix","strippedCurrent","strippedToValue","toValue","current","startValue","paPrefix","paSuffix","paStrippedValue","prefNumberSuffOnFrame","res","tab","colorOnStart","RGBAValue","RGBACurrent","RGBAToValue","forEach","i","index","undefined","push","colorOnFrame","finished","transformationMatrixOnStart","startMatrices","stopMatrices","transformationMatrixOnFrame","transforms","mappedTransforms","key","_","currentTranslation","currentScale","skewMatrix","rotations","mappedRotations","angle","rotationMatrixX","rotationMatrixY","rotationMatrixZ","rotationMatrix","updated","arrayOnStart","v","arrayOnFrame","objectOnStart","objectOnFrame","newObject","Array","isArray","IS_NATIVE","native","defineAnimation","starting","factory","create","_WORKLET","cancelAnimation","sharedValue"],"sources":["util.ts"],"sourcesContent":["import type { HigherOrderAnimation, StyleLayoutAnimation } from './commonTypes';\nimport type { ParsedColorArray } from '../Colors';\nimport {\n  isColor,\n  convertToRGBA,\n  rgbaArrayToRGBAColor,\n  toGammaSpace,\n  toLinearSpace,\n} from '../Colors';\nimport type {\n  SharedValue,\n  AnimatableValue,\n  Animation,\n  AnimationObject,\n  Timestamp,\n  AnimatableValueObject,\n} from '../commonTypes';\nimport NativeReanimatedModule from '../NativeReanimated';\nimport {\n  AffineMatrixFlat,\n  AffineMatrix,\n  flatten,\n  multiplyMatrices,\n  scaleMatrix,\n  addMatrices,\n  decomposeMatrixIntoMatricesAndAngles,\n  isAffineMatrixFlat,\n  subtractMatrices,\n  getRotationMatrix,\n} from './transformationMatrix/matrixUtils';\n\nlet IN_STYLE_UPDATER = false;\n\nexport function initialUpdaterRun<T>(updater: () => T): T {\n  IN_STYLE_UPDATER = true;\n  const result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\n\ninterface RecognizedPrefixSuffix {\n  prefix?: string;\n  suffix?: string;\n  strippedValue: number;\n}\n\nfunction recognizePrefixSuffix(value: string | number): RecognizedPrefixSuffix {\n  'worklet';\n  if (typeof value === 'string') {\n    const match = value.match(\n      /([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/\n    );\n    if (!match) {\n      throw Error(\n        \"Couldn't parse animation value. Check if there isn't any typo.\"\n      );\n    }\n    const prefix = match[1];\n    const suffix = match[4];\n    // number with scientific notation\n    const number = match[2] + (match[3] ?? '');\n    return { prefix, suffix, strippedValue: parseFloat(number) };\n  } else {\n    return { strippedValue: value };\n  }\n}\n\nfunction applyProgressToMatrix(\n  progress: number,\n  a: AffineMatrix,\n  b: AffineMatrix\n) {\n  'worklet';\n  return addMatrices(a, scaleMatrix(subtractMatrices(b, a), progress));\n}\n\nfunction applyProgressToNumber(progress: number, a: number, b: number) {\n  'worklet';\n  return a + progress * (b - a);\n}\n\nfunction decorateAnimation<T extends AnimationObject | StyleLayoutAnimation>(\n  animation: T\n): void {\n  'worklet';\n  if ((animation as HigherOrderAnimation).isHigherOrder) {\n    return;\n  }\n\n  const baseOnStart = (animation as Animation<AnimationObject>).onStart;\n  const baseOnFrame = (animation as Animation<AnimationObject>).onFrame;\n  const animationCopy = Object.assign({}, animation);\n  delete animationCopy.callback;\n\n  const prefNumberSuffOnStart = (\n    animation: Animation<AnimationObject>,\n    value: string | number,\n    timestamp: number,\n    previousAnimation: Animation<AnimationObject>\n  ) => {\n    // recognize prefix, suffix, and updates stripped value on animation start\n    const { prefix, suffix, strippedValue } = recognizePrefixSuffix(value);\n    animation.__prefix = prefix;\n    animation.__suffix = suffix;\n    animation.strippedCurrent = strippedValue;\n    const { strippedValue: strippedToValue } = recognizePrefixSuffix(\n      animation.toValue as string | number\n    );\n    animation.current = strippedValue;\n    animation.startValue = strippedValue;\n    animation.toValue = strippedToValue;\n    if (previousAnimation && previousAnimation !== animation) {\n      const {\n        prefix: paPrefix,\n        suffix: paSuffix,\n        strippedValue: paStrippedValue,\n      } = recognizePrefixSuffix(previousAnimation.current as string | number);\n      previousAnimation.current = paStrippedValue;\n      previousAnimation.__prefix = paPrefix;\n      previousAnimation.__suffix = paSuffix;\n    }\n\n    baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n\n    animation.current =\n      (animation.__prefix ?? '') +\n      animation.current +\n      (animation.__suffix ?? '');\n\n    if (previousAnimation && previousAnimation !== animation) {\n      previousAnimation.current =\n        (previousAnimation.__prefix ?? '') +\n        previousAnimation.current +\n        (previousAnimation.__suffix ?? '');\n    }\n  };\n  const prefNumberSuffOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: number\n  ) => {\n    animation.current = animation.strippedCurrent;\n    const res = baseOnFrame(animation, timestamp);\n    animation.strippedCurrent = animation.current;\n    animation.current =\n      (animation.__prefix ?? '') +\n      animation.current +\n      (animation.__suffix ?? '');\n    return res;\n  };\n\n  const tab = ['R', 'G', 'B', 'A'];\n  const colorOnStart = (\n    animation: Animation<AnimationObject>,\n    value: string | number,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    let RGBAValue: ParsedColorArray;\n    let RGBACurrent: ParsedColorArray;\n    let RGBAToValue: ParsedColorArray;\n    const res: Array<number> = [];\n    if (isColor(value)) {\n      RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n      RGBAValue = toLinearSpace(convertToRGBA(value));\n      if (animation.toValue) {\n        RGBAToValue = toLinearSpace(convertToRGBA(animation.toValue));\n      }\n    }\n    tab.forEach((i, index) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = RGBACurrent[index];\n      animation[i].toValue = RGBAToValue ? RGBAToValue[index] : undefined;\n      animation[i].onStart(\n        animation[i],\n        RGBAValue[index],\n        timestamp,\n        previousAnimation ? previousAnimation[i] : undefined\n      );\n      res.push(animation[i].current);\n    });\n\n    animation.current = rgbaArrayToRGBAColor(\n      toGammaSpace(res as ParsedColorArray)\n    );\n  };\n\n  const colorOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    const RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n    const res: Array<number> = [];\n    let finished = true;\n    tab.forEach((i, index) => {\n      animation[i].current = RGBACurrent[index];\n      const result = animation[i].onFrame(animation[i], timestamp);\n      // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n      finished = finished && result;\n      res.push(animation[i].current);\n    });\n\n    animation.current = rgbaArrayToRGBAColor(\n      toGammaSpace(res as ParsedColorArray)\n    );\n    return finished;\n  };\n\n  const transformationMatrixOnStart = (\n    animation: Animation<AnimationObject>,\n    value: AffineMatrixFlat,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    const toValue = animation.toValue as AffineMatrixFlat;\n\n    animation.startMatrices = decomposeMatrixIntoMatricesAndAngles(value);\n    animation.stopMatrices = decomposeMatrixIntoMatricesAndAngles(toValue);\n\n    // We create an animation copy to animate single value between 0 and 100\n    // We set limits from 0 to 100 (instead of 0-1) to make spring look good\n    // with default thresholds.\n\n    animation[0] = Object.assign({}, animationCopy);\n    animation[0].current = 0;\n    animation[0].toValue = 100;\n    animation[0].onStart(\n      animation[0],\n      0,\n      timestamp,\n      previousAnimation ? previousAnimation[0] : undefined\n    );\n\n    animation.current = value;\n  };\n\n  const transformationMatrixOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    let finished = true;\n    const result = animation[0].onFrame(animation[0], timestamp);\n    // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n    finished = finished && result;\n\n    const progress = animation[0].current / 100;\n\n    const transforms = ['translationMatrix', 'scaleMatrix', 'skewMatrix'];\n    const mappedTransforms: Array<AffineMatrix> = [];\n\n    transforms.forEach((key, _) =>\n      mappedTransforms.push(\n        applyProgressToMatrix(\n          progress,\n          animation.startMatrices[key],\n          animation.stopMatrices[key]\n        )\n      )\n    );\n\n    const [currentTranslation, currentScale, skewMatrix] = mappedTransforms;\n\n    const rotations: Array<'x' | 'y' | 'z'> = ['x', 'y', 'z'];\n    const mappedRotations: Array<AffineMatrix> = [];\n\n    rotations.forEach((key, _) => {\n      const angle = applyProgressToNumber(\n        progress,\n        animation.startMatrices['r' + key],\n        animation.stopMatrices['r' + key]\n      );\n      mappedRotations.push(getRotationMatrix(angle, key));\n    });\n\n    const [rotationMatrixX, rotationMatrixY, rotationMatrixZ] = mappedRotations;\n\n    const rotationMatrix = multiplyMatrices(\n      rotationMatrixX,\n      multiplyMatrices(rotationMatrixY, rotationMatrixZ)\n    );\n\n    const updated = flatten(\n      multiplyMatrices(\n        multiplyMatrices(\n          currentScale,\n          multiplyMatrices(skewMatrix, rotationMatrix)\n        ),\n        currentTranslation\n      )\n    );\n\n    animation.current = updated;\n\n    return finished;\n  };\n\n  const arrayOnStart = (\n    animation: Animation<AnimationObject>,\n    value: Array<number>,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    value.forEach((v, i) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = v;\n      animation[i].toValue = (animation.toValue as Array<number>)[i];\n      animation[i].onStart(\n        animation[i],\n        v,\n        timestamp,\n        previousAnimation ? previousAnimation[i] : undefined\n      );\n    });\n\n    animation.current = value;\n  };\n\n  const arrayOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    let finished = true;\n    (animation.current as Array<number>).forEach((_, i) => {\n      const result = animation[i].onFrame(animation[i], timestamp);\n      // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n      finished = finished && result;\n      (animation.current as Array<number>)[i] = animation[i].current;\n    });\n\n    return finished;\n  };\n\n  const objectOnStart = (\n    animation: Animation<AnimationObject>,\n    value: AnimatableValueObject,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    for (const key in value) {\n      animation[key] = Object.assign({}, animationCopy);\n      animation[key].onStart = animation.onStart;\n\n      animation[key].current = value[key];\n      animation[key].toValue = (animation.toValue as AnimatableValueObject)[\n        key\n      ];\n      animation[key].onStart(\n        animation[key],\n        value[key],\n        timestamp,\n        previousAnimation ? previousAnimation[key] : undefined\n      );\n    }\n    animation.current = value;\n  };\n\n  const objectOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    let finished = true;\n    const newObject: AnimatableValueObject = {};\n    for (const key in animation.current as AnimatableValueObject) {\n      const result = animation[key].onFrame(animation[key], timestamp);\n      // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n      finished = finished && result;\n      newObject[key] = animation[key].current;\n    }\n    animation.current = newObject;\n    return finished;\n  };\n\n  animation.onStart = (\n    animation: Animation<AnimationObject>,\n    value: number,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ) => {\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (isAffineMatrixFlat(value)) {\n      transformationMatrixOnStart(\n        animation,\n        value,\n        timestamp,\n        previousAnimation\n      );\n      animation.onFrame = transformationMatrixOnFrame;\n      return;\n    } else if (Array.isArray(value)) {\n      arrayOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = arrayOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    } else if (typeof value === 'object' && value !== null) {\n      objectOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = objectOnFrame;\n      return;\n    }\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\n\ntype AnimationToDecoration<\n  T extends AnimationObject | StyleLayoutAnimation,\n  U extends AnimationObject | StyleLayoutAnimation\n> = T extends StyleLayoutAnimation\n  ? Record<string, unknown>\n  : U | (() => U) | AnimatableValue;\n\nconst IS_NATIVE = NativeReanimatedModule.native;\n\nexport function defineAnimation<\n  T extends AnimationObject | StyleLayoutAnimation, // type that's supposed to be returned\n  U extends AnimationObject | StyleLayoutAnimation = T // type that's received\n>(starting: AnimationToDecoration<T, U>, factory: () => T): T {\n  'worklet';\n  if (IN_STYLE_UPDATER) {\n    return starting as unknown as T;\n  }\n  const create = () => {\n    'worklet';\n    const animation = factory();\n    decorateAnimation<U>(animation as unknown as U);\n    return animation;\n  };\n\n  if (_WORKLET || !IS_NATIVE) {\n    return create();\n  }\n  // @ts-ignore: eslint-disable-line\n  return create;\n}\n\nexport function cancelAnimation<T>(sharedValue: SharedValue<T>): void {\n  'worklet';\n  // setting the current value cancels the animation if one is currently running\n  sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\n"],"mappings":"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"}