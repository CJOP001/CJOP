{"version":3,"names":["_zegoZimReactNative","require","_logger","_ZegoUIKitCorePlugin","_interopRequireDefault","_class","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","ZegoPluginRoomMessageCore","constructor","shared","getInstance","_registerEngineCallback","ZegoUIKitCorePlugin","getZIMPlugin","on","zim","_ref","messageList","fromConversationID","zloginfo","message","type","ZIMMessageType","Command","command","commandMessage","Uint8Array","values","jsonText","decodeURIComponent","escape","fromCharCode","Array","from","notifyData","roomID","senderUserID","timestamp","_notifyInRoomCommandMessageReceived","Text","textMessage","_notifyInRoomTextMessageReceived","_unregisterEngineCallback","off","keys","_onInRoomTextMessageReceivedCallbackMap","forEach","callbackID","_onInRoomCommandMessageReceivedCallbackMap","sendInRoomTextMessage","Promise","resolve","reject","sendMessage","ZIMConversationType","Room","priority","then","_ref2","catch","error","sendInRoomCommandMessage","unescape","encodeURIComponent","map","val","charCodeAt","_ref3","onInRoomTextMessageReceived","callback","zlogerror","onInRoomCommandMessageReceived","exports"],"sources":["in_room_message_core.ts"],"sourcesContent":["import { \n  ZIMEventOfReceiveConversationMessageResult,\n  ZIMConversationType,\n  ZIMCommandMessage, \n  ZIMMessageType, \n  ZIMError,\n  ZIMMessageSentResult,\n  ZIMTextMessage,\n} from 'zego-zim-react-native';\nimport { zlogerror, zloginfo } from '../utils/logger';\nimport ZegoUIKitCorePlugin from \"../../components/internal/ZegoUIKitCorePlugin\";\n\nexport default class ZegoPluginRoomMessageCore {\n  static shared: ZegoPluginRoomMessageCore;\n\n  constructor() {\n    if (!ZegoPluginRoomMessageCore.shared) {\n      ZegoPluginRoomMessageCore.shared = this;\n    }\n    return ZegoPluginRoomMessageCore.shared;\n  }\n  static getInstance() {\n    if (!ZegoPluginRoomMessageCore.shared) {\n      ZegoPluginRoomMessageCore.shared = new ZegoPluginRoomMessageCore();\n    }\n    return ZegoPluginRoomMessageCore.shared;\n  }\n\n  _onInRoomTextMessageReceivedCallbackMap: { [index: string]: (notifyData: { \n    message: string; \n    roomID: string;\n    senderUserID: string;\n    timestamp: number;\n  }) => void } = {};\n\n  _onInRoomCommandMessageReceivedCallbackMap: { [index: string]: (notifyData: { \n    message: string; \n    roomID: string;\n    senderUserID: string;\n    timestamp: number;\n  }) => void } = {};\n\n  _registerEngineCallback() {\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on('receiveRoomMessage', (zim: any, { messageList, fromConversationID }: ZIMEventOfReceiveConversationMessageResult) => {\n      zloginfo(\n        '[Core][receiveRoomMessage callback]',\n        messageList,\n        fromConversationID\n      );\n      for (const message of messageList) {\n        if (message.type === ZIMMessageType.Command) {\n          const command = message as ZIMCommandMessage;\n          var commandMessage: Uint8Array | number[];\n          \n          if (command.message instanceof Uint8Array) {\n            commandMessage = command.message;\n          } else {\n            commandMessage = Object.values(command.message);\n          }\n\n          var jsonText = decodeURIComponent(escape(String.fromCharCode(...Array.from(commandMessage))));\n\n          const notifyData = {\n            message: jsonText,\n            roomID: fromConversationID,\n            senderUserID: message.senderUserID,\n            timestamp: message.timestamp\n          }\n          this._notifyInRoomCommandMessageReceived(notifyData);\n        } else if (message.type === ZIMMessageType.Text) {\n          const textMessage = message as ZIMTextMessage;\n          const notifyData = {\n            message: textMessage.message,\n            roomID: fromConversationID,\n            senderUserID: message.senderUserID,\n            timestamp: message.timestamp\n          }\n          this._notifyInRoomTextMessageReceived(notifyData);\n        }\n      }\n    });\n    zloginfo('[ZegoPluginRoomMessageCore]Register callback for ZIM...');\n  }\n\n  _unregisterEngineCallback() {\n    zloginfo('[ZegoPluginRoomMessageCore]Unregister callback from ZIM...');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('receiveRoomMessage');\n  }\n\n  _notifyInRoomTextMessageReceived(notifyData: { \n    message: string; \n    roomID: string;\n    senderUserID: string;\n    timestamp: number;\n   }) {\n    zloginfo(`[Core]NotifyInRoomTextMessageReceived, data: ${notifyData}`);\n    Object.keys(this._onInRoomTextMessageReceivedCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onInRoomTextMessageReceivedCallbackMap[callbackID]) {\n          this._onInRoomTextMessageReceivedCallbackMap[callbackID](notifyData);\n        }\n      }\n    );\n  }\n\n  _notifyInRoomCommandMessageReceived(notifyData: {\n    message: string;\n    roomID: string;\n    senderUserID: string;\n    timestamp: number;\n  }) {\n    zloginfo(`[Core]NotifyInRoomCommandMessageReceived, data: ${notifyData}`);\n    Object.keys(this._onInRoomCommandMessageReceivedCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onInRoomCommandMessageReceivedCallbackMap[callbackID]) {\n          this._onInRoomCommandMessageReceivedCallbackMap[callbackID](\n            notifyData\n          );\n        }\n      }\n    );\n  }\n\n  sendInRoomTextMessage(roomID: string, message: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const textMessage = {\n        type: ZIMMessageType.Text,\n        message: message,\n      }\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n      .sendMessage(textMessage, roomID, ZIMConversationType.Room, {priority: 1})\n      .then(({ message }: ZIMMessageSentResult) => {\n        zloginfo(`[Core]sendInRoomTextMessage done, roomID: ${roomID}, message: ${message}`);\n        resolve();\n      })\n      .catch((error: ZIMError) => {\n        reject(error);\n      })\n    });\n  }\n\n  sendInRoomCommandMessage(roomID: string, message: string): Promise<void> {\n    var command = new Uint8Array(Array.from(unescape(encodeURIComponent(message))).map((val) => val.charCodeAt(0)));\n    return new Promise((resolve, reject) => {\n      const commandMessage = {\n        type: ZIMMessageType.Command,\n        message: command,\n      }\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n      .sendMessage(commandMessage, roomID, ZIMConversationType.Room, {priority: 1})\n      .then(({ message }: ZIMMessageSentResult) => {\n        zloginfo(`[Core]sendInRoomCommandMessage done, roomID: ${roomID}, message: ${message}`);\n        resolve();\n      })\n      .catch((error: ZIMError) => {\n        reject(error);\n      })\n    });\n  }\n\n  onInRoomTextMessageReceived(callbackID: string, callback: (notifyData: { message: string; roomID: string; }) => void) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror('[ZegoPluginRoomPropertiesCore]Please initialize it first.');\n    }\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onInRoomTextMessageReceivedCallbackMap) {\n        zloginfo(\n          '[Core][onRoomPropertyUpdated] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onInRoomTextMessageReceivedCallbackMap[callbackID];\n      }\n    } else {\n      this._onInRoomTextMessageReceivedCallbackMap[callbackID] = callback;\n    }\n  }\n  onInRoomCommandMessageReceived(callbackID: string, callback: (notifyData: {\n    message: string;\n    roomID: string;\n  }) => void) {\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onInRoomCommandMessageReceivedCallbackMap) {\n        zloginfo(\n          '[Core][onInRoomCommandMessageReceived] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onInRoomCommandMessageReceivedCallbackMap[callbackID];\n      }\n    } else {\n      this._onInRoomCommandMessageReceivedCallbackMap[callbackID] = callback;\n    }\n  }\n\n}"],"mappings":"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"}