export default class ZegoPluginRoomMessageCore {
    static shared: ZegoPluginRoomMessageCore;
    constructor();
    static getInstance(): ZegoPluginRoomMessageCore;
    _onInRoomTextMessageReceivedCallbackMap: {
        [index: string]: (notifyData: {
            message: string;
            roomID: string;
            senderUserID: string;
            timestamp: number;
        }) => void;
    };
    _onInRoomCommandMessageReceivedCallbackMap: {
        [index: string]: (notifyData: {
            message: string;
            roomID: string;
            senderUserID: string;
            timestamp: number;
        }) => void;
    };
    _registerEngineCallback(): void;
    _unregisterEngineCallback(): void;
    _notifyInRoomTextMessageReceived(notifyData: {
        message: string;
        roomID: string;
        senderUserID: string;
        timestamp: number;
    }): void;
    _notifyInRoomCommandMessageReceived(notifyData: {
        message: string;
        roomID: string;
        senderUserID: string;
        timestamp: number;
    }): void;
    sendInRoomTextMessage(roomID: string, message: string): Promise<void>;
    sendInRoomCommandMessage(roomID: string, message: string): Promise<void>;
    onInRoomTextMessageReceived(callbackID: string, callback: (notifyData: {
        message: string;
        roomID: string;
    }) => void): void;
    onInRoomCommandMessageReceived(callbackID: string, callback: (notifyData: {
        message: string;
        roomID: string;
    }) => void): void;
}
