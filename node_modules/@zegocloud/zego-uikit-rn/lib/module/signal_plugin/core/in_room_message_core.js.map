{"version":3,"names":["ZIMConversationType","ZIMMessageType","zlogerror","zloginfo","ZegoUIKitCorePlugin","ZegoPluginRoomMessageCore","constructor","_defineProperty","shared","getInstance","_registerEngineCallback","getZIMPlugin","default","on","zim","_ref","messageList","fromConversationID","message","type","Command","command","commandMessage","Uint8Array","Object","values","jsonText","decodeURIComponent","escape","String","fromCharCode","Array","from","notifyData","roomID","senderUserID","timestamp","_notifyInRoomCommandMessageReceived","Text","textMessage","_notifyInRoomTextMessageReceived","_unregisterEngineCallback","off","keys","_onInRoomTextMessageReceivedCallbackMap","forEach","callbackID","_onInRoomCommandMessageReceivedCallbackMap","sendInRoomTextMessage","Promise","resolve","reject","sendMessage","Room","priority","then","_ref2","catch","error","sendInRoomCommandMessage","unescape","encodeURIComponent","map","val","charCodeAt","_ref3","onInRoomTextMessageReceived","callback","onInRoomCommandMessageReceived","_class"],"sources":["in_room_message_core.ts"],"sourcesContent":["import { \n  ZIMEventOfReceiveConversationMessageResult,\n  ZIMConversationType,\n  ZIMCommandMessage, \n  ZIMMessageType, \n  ZIMError,\n  ZIMMessageSentResult,\n  ZIMTextMessage,\n} from 'zego-zim-react-native';\nimport { zlogerror, zloginfo } from '../utils/logger';\nimport ZegoUIKitCorePlugin from \"../../components/internal/ZegoUIKitCorePlugin\";\n\nexport default class ZegoPluginRoomMessageCore {\n  static shared: ZegoPluginRoomMessageCore;\n\n  constructor() {\n    if (!ZegoPluginRoomMessageCore.shared) {\n      ZegoPluginRoomMessageCore.shared = this;\n    }\n    return ZegoPluginRoomMessageCore.shared;\n  }\n  static getInstance() {\n    if (!ZegoPluginRoomMessageCore.shared) {\n      ZegoPluginRoomMessageCore.shared = new ZegoPluginRoomMessageCore();\n    }\n    return ZegoPluginRoomMessageCore.shared;\n  }\n\n  _onInRoomTextMessageReceivedCallbackMap: { [index: string]: (notifyData: { \n    message: string; \n    roomID: string;\n    senderUserID: string;\n    timestamp: number;\n  }) => void } = {};\n\n  _onInRoomCommandMessageReceivedCallbackMap: { [index: string]: (notifyData: { \n    message: string; \n    roomID: string;\n    senderUserID: string;\n    timestamp: number;\n  }) => void } = {};\n\n  _registerEngineCallback() {\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().on('receiveRoomMessage', (zim: any, { messageList, fromConversationID }: ZIMEventOfReceiveConversationMessageResult) => {\n      zloginfo(\n        '[Core][receiveRoomMessage callback]',\n        messageList,\n        fromConversationID\n      );\n      for (const message of messageList) {\n        if (message.type === ZIMMessageType.Command) {\n          const command = message as ZIMCommandMessage;\n          var commandMessage: Uint8Array | number[];\n          \n          if (command.message instanceof Uint8Array) {\n            commandMessage = command.message;\n          } else {\n            commandMessage = Object.values(command.message);\n          }\n\n          var jsonText = decodeURIComponent(escape(String.fromCharCode(...Array.from(commandMessage))));\n\n          const notifyData = {\n            message: jsonText,\n            roomID: fromConversationID,\n            senderUserID: message.senderUserID,\n            timestamp: message.timestamp\n          }\n          this._notifyInRoomCommandMessageReceived(notifyData);\n        } else if (message.type === ZIMMessageType.Text) {\n          const textMessage = message as ZIMTextMessage;\n          const notifyData = {\n            message: textMessage.message,\n            roomID: fromConversationID,\n            senderUserID: message.senderUserID,\n            timestamp: message.timestamp\n          }\n          this._notifyInRoomTextMessageReceived(notifyData);\n        }\n      }\n    });\n    zloginfo('[ZegoPluginRoomMessageCore]Register callback for ZIM...');\n  }\n\n  _unregisterEngineCallback() {\n    zloginfo('[ZegoPluginRoomMessageCore]Unregister callback from ZIM...');\n    ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance().off('receiveRoomMessage');\n  }\n\n  _notifyInRoomTextMessageReceived(notifyData: { \n    message: string; \n    roomID: string;\n    senderUserID: string;\n    timestamp: number;\n   }) {\n    zloginfo(`[Core]NotifyInRoomTextMessageReceived, data: ${notifyData}`);\n    Object.keys(this._onInRoomTextMessageReceivedCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onInRoomTextMessageReceivedCallbackMap[callbackID]) {\n          this._onInRoomTextMessageReceivedCallbackMap[callbackID](notifyData);\n        }\n      }\n    );\n  }\n\n  _notifyInRoomCommandMessageReceived(notifyData: {\n    message: string;\n    roomID: string;\n    senderUserID: string;\n    timestamp: number;\n  }) {\n    zloginfo(`[Core]NotifyInRoomCommandMessageReceived, data: ${notifyData}`);\n    Object.keys(this._onInRoomCommandMessageReceivedCallbackMap).forEach(\n      (callbackID) => {\n        if (this._onInRoomCommandMessageReceivedCallbackMap[callbackID]) {\n          this._onInRoomCommandMessageReceivedCallbackMap[callbackID](\n            notifyData\n          );\n        }\n      }\n    );\n  }\n\n  sendInRoomTextMessage(roomID: string, message: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const textMessage = {\n        type: ZIMMessageType.Text,\n        message: message,\n      }\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n      .sendMessage(textMessage, roomID, ZIMConversationType.Room, {priority: 1})\n      .then(({ message }: ZIMMessageSentResult) => {\n        zloginfo(`[Core]sendInRoomTextMessage done, roomID: ${roomID}, message: ${message}`);\n        resolve();\n      })\n      .catch((error: ZIMError) => {\n        reject(error);\n      })\n    });\n  }\n\n  sendInRoomCommandMessage(roomID: string, message: string): Promise<void> {\n    var command = new Uint8Array(Array.from(unescape(encodeURIComponent(message))).map((val) => val.charCodeAt(0)));\n    return new Promise((resolve, reject) => {\n      const commandMessage = {\n        type: ZIMMessageType.Command,\n        message: command,\n      }\n      ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()\n      .sendMessage(commandMessage, roomID, ZIMConversationType.Room, {priority: 1})\n      .then(({ message }: ZIMMessageSentResult) => {\n        zloginfo(`[Core]sendInRoomCommandMessage done, roomID: ${roomID}, message: ${message}`);\n        resolve();\n      })\n      .catch((error: ZIMError) => {\n        reject(error);\n      })\n    });\n  }\n\n  onInRoomTextMessageReceived(callbackID: string, callback: (notifyData: { message: string; roomID: string; }) => void) {\n    if (!ZegoUIKitCorePlugin.getZIMPlugin().default.getInstance()) {\n      zlogerror('[ZegoPluginRoomPropertiesCore]Please initialize it first.');\n    }\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onInRoomTextMessageReceivedCallbackMap) {\n        zloginfo(\n          '[Core][onRoomPropertyUpdated] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onInRoomTextMessageReceivedCallbackMap[callbackID];\n      }\n    } else {\n      this._onInRoomTextMessageReceivedCallbackMap[callbackID] = callback;\n    }\n  }\n  onInRoomCommandMessageReceived(callbackID: string, callback: (notifyData: {\n    message: string;\n    roomID: string;\n  }) => void) {\n    if (typeof callback !== 'function') {\n      if (callbackID in this._onInRoomCommandMessageReceivedCallbackMap) {\n        zloginfo(\n          '[Core][onInRoomCommandMessageReceived] Remove callback for: [',\n          callbackID,\n          '] because callback is not a valid function!'\n        );\n        delete this._onInRoomCommandMessageReceivedCallbackMap[callbackID];\n      }\n    } else {\n      this._onInRoomCommandMessageReceivedCallbackMap[callbackID] = callback;\n    }\n  }\n\n}"],"mappings":"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"}