"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useFonts = useFonts;

var _react = require("react");

var _expoFont = require("expo-font");

/**
 * Load a map of custom fonts to use in textual elements.
 * The map keys are used as font names, and can be used with `fontFamily: <name>;`.
 * It returns a boolean describing if all fonts are loaded.
 *
 * Note, the fonts are not "reloaded" when you dynamically change the font map.
 *
 * @see https://docs.expo.io/versions/latest/sdk/font/
 * @example const [isLoaded] = useFonts(...);
 */
function useFonts(map) {
  const [loaded, setLoaded] = (0, _react.useState)(false);
  (0, _react.useEffect)(() => {
    (0, _expoFont.loadAsync)(map).then(() => setLoaded(true));
  }, []); // eslint-disable-line
  // note: to avoid any ambiguity fonts are only loaded once
  // since every rerender is a new object, we have no way of
  // detecting a new map and updating the loaded state based on that

  return [loaded];
}
//# sourceMappingURL=use-fonts.js.map